<?php

/**
 * @file
 * Contains install and update functions for Payer.
 */

/**
 * Implements hook_install().
 */
function payer_install() {
  $events_pay_type = array(
    'type' => 'events_pay',
    'name' => st('Events pay'),
    'base' => 'node_content',
    'custom' => TRUE,
    'modified' => TRUE,
    'locked' => FALSE,
  );

  $events_pay_type = node_type_set_defaults($events_pay_type);
  node_type_save($events_pay_type);

  // Disable comments by default on Events pay nodes.
  variable_set('comment_events_pay', '0');

  // Create fields for Events pay
  // Create node field Act
  field_create_field(
    array(
      'field_name' => 'events_pay_act',
      'type' => 'list_text',
      'cardinality' => 1,
      'settings' => array(
        'allowed_values' => array(
          0 => st('Spending'),
          1 => st('Coming'),
        ),
      ),
    )
  );
  // Create instance Act
  field_create_instance(
    array(
      'entity_type' => 'node',
      'bundle' => 'events_pay',
      'field_name' => 'events_pay_act',
      'required' => TRUE,
      'label' => st('Act'),
      'widget' => array('type' => 'options_select'),
    )
  );

  // Create node field Status
  field_create_field(
    array(
      'field_name' => 'events_pay_status',
      'type' => 'list_text',
      'cardinality' => 1,
      'settings' => array(
        'allowed_values' => array(
          0 => st('Waiting'),
          1 => st('Completed'),
        ),
      ),
    )
  );
  // Create instance Status
  field_create_instance(
    array(
      'entity_type' => 'node',
      'bundle' => 'events_pay',
      'field_name' => 'events_pay_status',
      'required' => TRUE,
      'label' => st('Status'),
      'widget' => array('type' => 'options_select'),
    )
  );

  // Create node field Amount
  field_create_field(
    array(
      'field_name' => 'events_pay_amount',
      'type' => 'number_float',
      'cardinality' => 1,
    )
  );
  // Create instance Amount
  field_create_instance(
    array(
      'field_name' => 'events_pay_amount',
      'entity_type' => 'node',
      'bundle' => 'events_pay',
      'label' => st('Amount'),
      'required' => TRUE,
      'widget' => array(
        'type' => 'number',
      ),
      'settings' => array(
        'text_processing' => TRUE,
        'min' => 0,
        'decimal_separator' => '.',
      ),
      'display' => array(
        'default' => array(
          'type' => 'number_float',
        ),
      ),
    )
  );

  // Create node field Comment
  field_create_field(
    array(
      'field_name' => 'events_pay_comment',
      'type' => 'text',
      'cardinality' => 1,
    )
  );
  // Create instance Comment
  field_create_instance(
    array(
      'field_name' => 'events_pay_comment',
      'entity_type' => 'node',
      'bundle' => 'events_pay',
      'label' => st('Comment'),
      'widget' => array(
        'type' => 'textfield',
      ),
      'settings' => array(
        'text_processing' => FALSE,
      ),
      'display' => array(
        'default' => array(
          'type' => 'textfield',
        ),
      ),
    )
  );

  // Create user field Wallet
  field_create_field(
    array(
      'field_name' => 'payer_wallet',
      'type' => 'number_float',
      'cardinality' => 1,
    )
  );
  // Create instance Wallet
  field_create_instance(
    array(
      'field_name' => 'payer_wallet',
      'entity_type' => 'user',
      'bundle' => 'user',
      'label' => st('Wallet'),
      'widget' => array(
        'type' => 'number',
      ),
      'settings' => array(
        'text_processing' => TRUE,
        'min' => 0,
        'decimal_separator' => '.',
      ),
      'display' => array(
        'default' => array(
          'type' => 'number_float',
        ),
      ),
      'default_value' => array(
        array(
          'value' => 0
        )
      )
    )
  );
}

/**
 * Implements hook_uninstall().
 */
function payer_uninstall() {
}